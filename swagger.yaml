openapi: 3.0.0
info:
  title: Student-Teacher Meeting Scheduler API
  version: 1.3.0
  description: An API for scheduling meetings, managing persons, students, teachers, their ratings, and integrating with Google services.

servers:
  - url: http://localhost:8000
    description: Local development server

paths:
  /auth/login/google:
    get:
      summary: Login via Google
      description: Redirects the user to Google's OAuth2 login page.
      responses:
        '302':
          description: Redirect to Google login page.
        '400':
          description: Failed to initiate Google login.

  /auth/callback/google:
    get:
      summary: Google OAuth2 Callback
      description: Handles the OAuth2 callback from Google and stores user information.
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful login.
        '400':
          description: Failed to authenticate.

  /meetings/schedule-google-calendar:
    post:
      summary: Schedule a meeting in Google Calendar
      description: Creates a meeting and adds it to the user's Google Calendar.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meeting'
      responses:
        '200':
          description: Meeting successfully scheduled in Google Calendar.
        '400':
          description: Failed to create the meeting.
        '401':
          description: Unauthorized, user not logged in.

  /persons:
    get:
      summary: Get a list of all persons
      responses:
        '200':
          description: A list of persons
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
    post:
      summary: Create a new person
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '201':
          description: Person created successfully
    delete:
      summary: Delete a person by ID
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Person deleted successfully
        '404':
          description: Person not found

  /students:
    get:
      summary: Get a list of all students
      responses:
        '200':
          description: A list of students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
    post:
      summary: Create a new student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '201':
          description: Student created successfully
    delete:
      summary: Delete a student by ID
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Student deleted successfully
        '404':
          description: Student not found

  /teachers:
    get:
      summary: Get a list of all teachers
      responses:
        '200':
          description: A list of teachers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Teacher'
    post:
      summary: Create a new teacher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Teacher'
      responses:
        '201':
          description: Teacher created successfully
    delete:
      summary: Delete a teacher by ID
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Teacher deleted successfully
        '404':
          description: Teacher not found

components:
  schemas:
    Person:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        phone:
          type: string
        email:
          type: string
        about_section:
          type: string
        available:
          type: array
          items:
            type: string
            format: date-time
        rating:
          type: number
          format: float
          description: Average rating for the person, on a scale of 0 to 5.
          example: 4.5

    Student:
      allOf:
        - $ref: '#/components/schemas/Person'
        - type: object
          properties:
            subjects_interested_in_learning:
              type: array
              items:
                type: string
            meetings:
              type: array
              items:
                $ref: '#/components/schemas/Meeting'

    Teacher:
      allOf:
        - $ref: '#/components/schemas/Person'
        - type: object
          properties:
            subjects_to_teach:
              type: array
              items:
                type: string
            hourly_rate:
              type: number
              format: float
            meetings:
              type: array
              items:
                $ref: '#/components/schemas/Meeting'

    Meeting:
      type: object
      properties:
        location:
          type: string
        start_time:
          type: string
          format: date-time
        finish_time:
          type: string
          format: date-time
        subject:
          type: string
        people:
          type: array
          items:
            $ref: '#/components/schemas/Person'
        attached_files:
          type: array
          items:
            type: string
            format: binary
