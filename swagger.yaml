openapi: 3.0.2
info:
  title: Private Tutor Scheduling API
  description: API for private tutors to manage their schedules and for students to book tutoring sessions.
  version: 1.0.0
servers:
  - url: 'http://localhost:5000'
    description: Development server

paths:
  /tutors/{tutorId}/schedules:
    get:
      summary: Get a tutor's schedule
      parameters:
        - in: path
          name: tutorId
          required: true
          schema:
            type: string
          description: The ID of the tutor
      responses:
        '200':
          description: Successfully retrieved the schedule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '404':
          description: Schedule not found
    post:
      summary: Create a new schedule for a tutor
      parameters:
        - in: path
          name: tutorId
          required: true
          schema:
            type: string
          description: The ID of the tutor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
      responses:
        '201':
          description: Schedule created successfully
        '400':
          description: Error in data format

  /students/{studentId}/sessions:
    get:
      summary: View available tutoring sessions for a student
      parameters:
        - in: path
          name: studentId
          required: true
          schema:
            type: string
          description: The ID of the student
      responses:
        '200':
          description: Successfully retrieved available sessions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Class'
        '404':
          description: No sessions found

  /students/register:
    post:
      summary: Register a new student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '201':
          description: Student registered successfully
        '400':
          description: Error in data format

  /teachers/add:
    post:
      summary: Add a new teacher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Teacher'
      responses:
        '201':
          description: Teacher added successfully
        '400':
          description: Error in data format

  /meetings/schedule:
    post:
      summary: Schedule a meeting between a student and a teacher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                studentId:
                  type: string
                  description: The ID of the student
                teacherId:
                  type: string
                  description: The ID of the teacher
                dateTime:
                  type: string
                  format: 'date-time'
                  description: Date and time of the meeting
              required:
                - studentId
                - teacherId
                - dateTime
      responses:
        '201':
          description: Meeting scheduled successfully
        '400':
          description: Error in data format

components:
  schemas:
    Person:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the person
        name:
          type: string
          description: Full name of the person
        email:
          type: string
          format: email
          description: Email address of the person
        phone:
          type: string
          description: Phone number of the person
      required:
        - id
        - name
        - email
        - phone

    Schedule:
      type: object
      properties:
        scheduleId:
          type: string
          description: The unique identifier for the schedule
        date:
          type: string
          format: date
          description: The date of the schedule
        sessions:
          type: array
          items:
            $ref: '#/components/schemas/Class'
      required:
        - scheduleId
        - date
        - sessions

    Class:
      type: object
      properties:
        sessionId:
          type: string
          description: The unique identifier for the tutoring session
        subject:
          type: string
          description: Subject of the session
        startTime:
          type: string
          format: 'date-time'
          description: Start time of the session
        endTime:
          type: string
          format: 'date-time'
          description: End time of the session
      required:
        - sessionId
        - subject
        - startTime
        - endTime

    Student:
      allOf:
        - $ref: '#/components/schemas/Person'
        - type: object
          properties:
            availableTimes:
              type: array
              items:
                type: string
                format: time
                description: Available times in HH:mm format
          required:
            - availableTimes

    Teacher:
      allOf:
        - $ref: '#/components/schemas/Person'
        - type: object
          properties:
            availableTimes:
              type: array
              items:
                type: string
                format: time
                description: Available times in HH:mm format
            courses:
              type: array
              items:
                type: string
              description: List of courses taught by the teacher
          required:
            - availableTimes
            - courses
